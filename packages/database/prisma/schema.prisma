// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// adding table structure schema to this file
//used chat to help with creating relations between the tables 
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

enum ROLE {
  STUDENT
  PROFESSOR
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  phonenumber   String?
  role          ROLE @default(STUDENT)
}

model Student {
  id       Int     @id @default(autoincrement())
  name     String
  gradYr   DateTime
  major    String

  enrollments Enrollment[]
  grades      Grade[]
}

model Professor {
  id      Int     @id @default(autoincrement())
  name    String

  courses CourseProfessor[]
  grades  Grade[]
}

model Course {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  enrollments Enrollment[]
  grades      Grade[]
  professors  CourseProfessor[]
}

model Enrollment {
  studentId Int
  courseId  Int

  student   Student @relation(fields: [studentId], references: [id])
  course    Course  @relation(fields: [courseId], references: [id])

  @@id([studentId, courseId])
}

model Grade {
  studentId   Int
  courseId    Int
  professorId Int
  grade       Int

  student   Student   @relation(fields: [studentId], references: [id])
  course    Course    @relation(fields: [courseId], references: [id])
  professor Professor @relation(fields: [professorId], references: [id])

  @@id([studentId, courseId, professorId])
}

model CourseProfessor {
  courseId    Int
  professorId Int

  course    Course    @relation(fields: [courseId], references: [id])
  professor Professor @relation(fields: [professorId], references: [id])

  @@id([courseId, professorId])
}
